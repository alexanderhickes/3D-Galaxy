#version 330

// Input vertex data, different for all executions of this shader.
in vec3 vertexPosition_modelspace;
in vec3 vertexSecondPosition_modelspace;
in vec3 vertexColor;


// Output data ; will be interpolated for each fragment.
out vec3 fragmentColor;
// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform float morph;

void main(){	

	// Output position of the vertex, in clip space : MVP * interpolate position between the first and second 
	gl_Position =  MVP * vec4((1-morph)*vertexPosition_modelspace+ morph*vertexSecondPosition_modelspace,1);

	// The color of each vertex will be interpolated
	// to produce the color of each fragment
	fragmentColor = vertexColor;
}

